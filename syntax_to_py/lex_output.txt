ID(prog)
RightArrow
String('CGPROGRAM')
ID(cg_prog)
String('ENDCG')
Enter
Enter
ID(cg_prog)
RightArrow
ID(cg_stms)
Enter
ID(cg_stms)
RightArrow
ID(cg_stm)
ID(cg_stms)
Enter
RightArrow
Enter
ID(cg_stm)
RightArrow
ID(preprocessing_stm)
Enter
RightArrow
ID(function_definition)
Enter
RightArrow
ID(dec)
Enter
ID(function_definition)
RightArrow
ID(dec_specifier)
ID(declarator)
ID(compound_stm)
Enter
Enter
ID(preprocessing_stm)
RightArrow
ID(pp_if_stm)
Enter
RightArrow
ID(pp_cmd)
Enter
ID(pp_if_stm)
RightArrow
Pound
String('if')
ID(ID)
Enter
RightArrow
Pound
String('ifdef')
ID(ID)
Enter
RightArrow
Pound
String('ifndef')
ID(ID)
Enter
RightArrow
Pound
String('elif')
ID(ID)
Enter
RightArrow
Pound
String('else')
Enter
RightArrow
Pound
String('endif')
Enter
ID(pp_cmd)
RightArrow
Pound
String('include')
ID(String)
Enter
RightArrow
Pound
String('pragma')
ID(ids)
ID(Enter)
Enter
ID(ids)
RightArrow
ID(ID)
ID(ids)
Enter
RightArrow
Enter
Enter
Enter
ID(primary_exp)
RightArrow
ID(ID)
Enter
RightArrow
ID(String)
Enter
RightArrow
ID(Number)
Enter
RightArrow
LParen
ID(exp)
RParen
Enter
ID(postfix_exp)
RightArrow
ID(primary_exp)
Enter
RightArrow
ID(postfix_exp)
LBrack
ID(exp)
RBrack
Enter
RightArrow
ID(postfix_exp)
LParen
RParen
Enter
RightArrow
ID(postfix_exp)
LParen
ID(argument_exp_list)
RParen
Enter
RightArrow
ID(postfix_exp)
Dot
ID(ID)
Enter
RightArrow
ID(postfix_exp)
Increment
Enter
RightArrow
ID(postfix_exp)
Decrement
Enter
ID(argument_exp_list)
RightArrow
ID(assignment_exp)
Enter
RightArrow
ID(argument_exp_list)
Comma
ID(assignment_exp)
Enter
ID(unary_exp)
RightArrow
ID(postfix_exp)
Enter
RightArrow
Increment
ID(unary_exp)
Enter
RightArrow
Decrement
ID(unary_exp)
Enter
RightArrow
ID(unary_op)
ID(unary_exp)
Enter
ID(unary_op)
RightArrow
Plus
Enter
RightArrow
Minus
Enter
RightArrow
NOT
Enter
RightArrow
Tilde
Enter
ID(binary_exp)
RightArrow
ID(unary_exp)
Enter
RightArrow
ID(binary_exp)
ID(binary_op)
ID(unary_exp)
Enter
ID(binary_op)
RightArrow
Times
Enter
RightArrow
Divide
Enter
RightArrow
Percent
Enter
RightArrow
Plus
Enter
RightArrow
Minus
Enter
RightArrow
LeftShift
Enter
RightArrow
RightShift
Enter
RightArrow
LT
Enter
RightArrow
GT
Enter
RightArrow
LE
Enter
RightArrow
GE
Enter
RightArrow
EQ
Enter
RightArrow
NEQ
Enter
RightArrow
Ampersand
Enter
RightArrow
Caret
Enter
RightArrow
VerticalBar
Enter
RightArrow
AND
Enter
RightArrow
OR
Enter
ID(conditional_exp)
RightArrow
ID(binary_exp)
Enter
RightArrow
ID(binary_exp)
Question
ID(exp)
Colon
ID(conditional_exp)
Enter
ID(assignment_exp)
RightArrow
ID(conditional_exp)
Enter
RightArrow
ID(unary_exp)
ID(assignment_op)
ID(assignment_exp)
Enter
ID(assignment_op)
RightArrow
Assign
Enter
RightArrow
AddAssign
Enter
RightArrow
SubAssign
Enter
RightArrow
MulAssign
Enter
RightArrow
DivAssign
Enter
RightArrow
ModAssign
Enter
RightArrow
LeftShiftAssign
Enter
RightArrow
RightShiftAssign
Enter
RightArrow
AndAssign
Enter
RightArrow
XorAssign
Enter
RightArrow
OrAssign
Enter
ID(exp)
RightArrow
ID(assignment_exp)
Enter
RightArrow
ID(exp)
Comma
ID(assignment_exp)
Enter
Enter
Enter
Enter
ID(dec)
RightArrow
ID(struct_specifier)
Semicolon
Enter
RightArrow
ID(dec_specifier)
ID(init_dec_list)
Semicolon
Enter
ID(dec_specifier)
RightArrow
ID(type_specifier)
Enter
RightArrow
ID(type_qualifier)
ID(type_specifier)
Enter
ID(type_specifier)
RightArrow
String('void')
Enter
RightArrow
String('char')
Enter
RightArrow
String('short')
Enter
RightArrow
String('int')
Enter
RightArrow
String('long')
Enter
RightArrow
String('float')
Enter
RightArrow
String('double')
Enter
RightArrow
String('sampler2D')
Enter
RightArrow
String('float2')
Enter
RightArrow
String('float3')
Enter
RightArrow
String('float4')
Enter
RightArrow
String('half2')
Enter
RightArrow
String('half3')
Enter
RightArrow
String('half4')
Enter
RightArrow
String('fixed2')
Enter
RightArrow
String('fixed3')
Enter
RightArrow
String('fixed4')
Enter
RightArrow
ID(typedef_name)
Enter
ID(type_qualifier)
RightArrow
String('uniform')
Enter
ID(typedef_name)
RightArrow
ID(ID)
Enter
Enter
ID(struct_specifier)
RightArrow
String('struct')
ID(ID)
Enter
RightArrow
String('struct')
ID(ID)
LBrace
ID(struct_dec_list)
RBrace
Enter
ID(struct_dec_list)
RightArrow
ID(struct_dec)
Enter
RightArrow
ID(struct_dec_list)
ID(struct_dec)
Enter
ID(struct_dec)
RightArrow
ID(type_specifier)
ID(struct_declarator_list)
Semicolon
Enter
ID(struct_declarator_list)
RightArrow
ID(struct_declarator)
Enter
RightArrow
ID(struct_declarator_list)
Comma
ID(struct_declarator)
Enter
ID(struct_declarator)
RightArrow
ID(declarator)
Enter
RightArrow
ID(declarator)
Colon
ID(ID)
Enter
Enter
ID(declarator)
RightArrow
ID(ID)
Enter
Enter
Enter
RightArrow
ID(declarator)
LBrack
ID(exp)
RBrack
Enter
RightArrow
ID(declarator)
LParen
ID(parameter_list)
RParen
Enter
ID(parameter_list)
RightArrow
ID(parameter_dec)
Enter
RightArrow
ID(parameter_list)
Comma
ID(parameter_dec)
Enter
ID(parameter_dec)
RightArrow
ID(type_specifier)
ID(declarator)
Enter
Enter
ID(init_dec_list)
RightArrow
ID(init_dec)
Enter
RightArrow
ID(init_dec_list)
Comma
ID(init_dec)
Enter
ID(init_dec)
RightArrow
ID(declarator)
Enter
RightArrow
ID(declarator)
Assign
ID(assignment_exp)
Enter
Enter
ID(stm)
RightArrow
ID(exp_stm)
Enter
RightArrow
ID(compound_stm)
Enter
RightArrow
ID(selection_stm)
Enter
RightArrow
ID(iteration_stm)
Enter
RightArrow
ID(jump_stm)
Enter
ID(exp_stm)
RightArrow
ID(exp)
Semicolon
Enter
RightArrow
Semicolon
Enter
ID(compound_stm)
RightArrow
LBrace
ID(block_item_list)
RBrace
Enter
RightArrow
LBrace
RBrace
Enter
ID(block_item_list)
RightArrow
ID(block_item)
Enter
RightArrow
ID(block_item_list)
ID(block_item)
Enter
ID(block_item)
RightArrow
ID(dec)
Enter
RightArrow
ID(stm)
Enter
ID(selection_stm)
RightArrow
String('if')
LParen
ID(exp)
RParen
ID(stm)
Enter
RightArrow
String('if')
LParen
ID(exp)
RParen
ID(stm)
String('else')
ID(stm)
Enter
ID(iteration_stm)
RightArrow
String('while')
LParen
ID(exp)
RParen
ID(stm)
Enter
RightArrow
String('do')
ID(stm)
String('while')
LParen
ID(exp)
RParen
Semicolon
Enter
RightArrow
String('for')
LParen
ID(exp)
Semicolon
ID(exp)
Semicolon
ID(exp)
RParen
ID(stm)
Enter
ID(jump_stm)
RightArrow
String('goto')
ID(ID)
Enter
RightArrow
String('continue')
Enter
RightArrow
String('break')
Enter
RightArrow
String('return')
ID(exp)
Semicolon
Enter
RightArrow
String('return')
Semicolon
