/* syntax.txt中的元素与语法分析概念的对应关系。
1. 小写字母开头 = 语法Nontermminal
2. 大写字母开头 = 词法Token
3. 单引号开头 = 词法Token集合中的关键字，实现上是TokenType.ID( xxx )
4. 标点 = 也是词法Token
*/
//1
prog        -> 'Shader' String { shader_body_elms }
shader_body_elms  -> shader_body_elm shader_body_elms
                  ->
shader_body_elm   -> props
                  -> category
                  -> subshr
                  -> cg_prog
                  -> fall_back_cmd
                  -> custom_editor_cmd
//2
props       -> 'Properties' { props_body }
props_body  -> prop_stm props_body
            -> 
prop_stm    -> ID ( String, prop_type ) = prop_init
            -> [ ID ] ID ( String, prop_type ) = prop_init
            -> [ 'Enum' ( enum_items ) ] ID ( String, prop_type ) = prop_init
            -> [ 'MaterialEnum' ( enum_items ) ] ID ( String, prop_type ) = prop_init
            -> [ 'KeywordEnum' ( ids_with_comma ) ] ID ( String, prop_type ) = prop_init
prop_type   -> 'Color'
            -> 'Vector'
            -> 'Range'
            -> 'Int'
            -> 'Float'
            -> '2D'
            -> 'Cube'
            -> '3D'
            -> 'Any'
            -> 'Range' ( Number , Number )
prop_init   -> Number
            -> String { }
            -> String { ID }
            -> ( Number, Number, Number )
            -> ( Number, Number, Number, Number )
enum_items              -> enum_item enum_item_successor
enum_item               -> ID
                        -> Number
enum_item_successor     -> , enum_item 
                        -> , enum_item enum_item_successor
                        -> 
ids_with_comma          -> ids id_with_comma_successor
id_with_comma_successor -> , ids
                        -> , ids id_with_comma_successor
//
category    -> 'Category' { category_body_elms }
category_body_elms -> category_body_elm category_body_elms
                   -> 
category_body_elm  -> tags
                   -> cmd_stm
                   -> subshr
//3
subshr      -> 'SubShader' { subshr_body_elms }
subshr_body_elms  -> subshr_body_elm subshr_body_elms
                  -> 
subshr_body_elm   -> tags
                  -> cmd_stm
                  -> shr_pass
                  -> cg_prog
//4
tags        -> 'Tags' { tags_body }
tags_body   -> tag_smt tags_body
            -> 
tag_smt     -> String = String
//5
cmd_stm     -> cmd_name id_or_number_or_placeholder
            -> 'Alphatest' ID placeholder
            -> 'BindChannels' { bind_channel_stms }
            -> 'Blend' id_or_number_or_placeholder id_or_number_or_placeholder
            -> 'Material' { meterial_stms }
            -> 'Name' String
            -> 'Offset' id_or_number_or_placeholder , id_or_number_or_placeholder
            -> 'Stencil' { stencil_stms }
            -> 'SetTexture' placeholder { set_texture_stms }
cmd_name    -> 'AlphaToMask'
            -> 'ColorMask'
            -> 'ColorMaterial'
            -> 'Cull'
            -> 'Lighting'
            -> 'LOD'
            -> 'SeparateSpecular'
            -> 'ZTest'
            -> 'ZWrite'
id_or_number_or_placeholder   -> ID
                              -> Number
                              -> placeholder
ids         -> ID ids
            ->
placeholder -> [ ID ]
bind_channel_stms -> bind_channel_stm bind_channel_stms
                  -> 
bind_channel_stm  -> 'Bind' String , ID
meterial_stms     -> meterial_stm meterial_stms
                  -> 
meterial_stm      -> ID id_or_number_or_placeholder
stencil_stms      -> stencil_stm stencil_stms
                  -> 
stencil_stm       -> ID id_or_number_or_placeholder
set_texture_stms  -> set_texture_stm set_texture_stms
                  -> 
set_texture_stm   -> 'matrix' placeholder
                  -> 'constantColor' placeholder
                  -> 'constantColor' ( Number, Number, Number, Number )
                  -> 'combine' combine_options
combine_options   -> combine_option combine_options
                  -> combine_option , combine_options
                  -> combine_option combine_option_op combine_options
                  ->
combine_option    -> ID
                  -> ( ID )
combine_option_op -> +
                  -> -
                  -> *
                  -> /
//6
shr_pass    -> 'Pass' { pass_body_elms }
            -> 'UsePass' String
pass_body_elms    -> pass_body_elm pass_body_elms
                  -> 
pass_body_elm     -> tags
                  -> cmd_stm
                  -> cg_prog
//
cg_prog     -> 'CGPROGRAM' 'ENDCG'
            -> 'CGINCLUDE' 'ENDCG'
//
fall_back_cmd -> 'FallBack' String
              -> 'FallBack' 'Off'
custom_editor_cmd -> 'CustomEditor' String
